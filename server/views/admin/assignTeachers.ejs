<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Add a course</title>
    <style type="text/css">
        section {
            border-bottom: 1px solid grey;
            padding-bottom: 10px;
        }

        section p:first-of-type>strong {
            color: rgb(2.8%, 11.1%, 47.6%);
        }

        section p:nth-of-type(2)>strong {
            color: rgb(29.1%, 30.8%, 38.2%);
        }
    </style>
</head>

<body>
<h3>Assign Teachers:</h3>
<table id="table" border="1" style="margin-bottom:1cm" >
    <tr>
        <th style="background-color: darkgray;">courseID</th>
        <th style="background-color: darkgray;">code</th>
        <th style="background-color: darkgray;">name</th>
        <th style="background-color: darkgray;">departmentID</th>
        <th style="background-color: darkgray;">teacherID</th>
        <th style="background-color: darkgray;">email</th>
        <th>INPUT NEW TEACHER ID</th>
    </tr>
    
    <%
    if(courseData.length!=0){
    var i=1;
    courseData.forEach(function(data){
    %>
    <tr>
        <td style="background-color: darkgray;"><%=data.id %></td>
        <td style="background-color: darkgray;"><%=data.code %></td>
        <td style="background-color: darkgray;"><%=data.name %></td>
        <td style="background-color: darkgray;"><%=data.departmentID %></td>
        <td style="background-color: darkgray;"><%=data.teacherID %></td>
        <td style="background-color: darkgray;"><%=data.email %></td>
        <td><%= %></td>
        <td><button class="submitrow">Set</button></td>
        <td><button class="deleterow">Reset</button></td>
    </tr>
    <%  i++; }) %>
    <% } else{ %>
        <tr>
            <td colspan="7">No Data Found</td>
        </tr>
    <% } %>
</table>

<h3>Teachers List:</h3>
<table border="1" style="margin-bottom:1cm" >
    <tr>
        <th style="background-color: darkgray;">id</th>
        <th style="background-color: darkgray;">email</th>
        <th style="background-color: darkgray;">last</th>
        <th style="background-color: darkgray;">first</th>
        <th style="background-color: darkgray;">departmentID</th>
    </tr>
    
    <%
    if(teacherData.length!=0){
    var i=1;
    teacherData.forEach(function(data){
    %>
    <tr>
        <td style="background-color: darkgray;"><%=data.id %></td>
        <td style="background-color: darkgray;"><%=data.email %></td>
        <td style="background-color: darkgray;"><%=data.last %></td>
        <td style="background-color: darkgray;"><%=data.first %></td>
        <td style="background-color: darkgray;"><%=data.departmentID %></td>
    </tr>
    <%  i++; }) %>
    <% } else{ %>
        <tr>
            <td colspan="7">No Data Found</td>
        </tr>
    <% } %>
</table>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script>
    $(function() {
        var i = 0;
        $("tr").each(function() {
            $(this).find("td:eq(6)").attr("contentEditable", true);
            $(this).find("button").attr("id", i);
            $(this).find("button").attr("id", i++);
        });
    });
    var success = "";
    (function($){
        function submitChanges( e ){
            console.log(e.target.id);
            const el = document.getElementById("table"),
                input = el.nodeName != 'INPUT' && el.nodeName != 'TEXTAREA',
                data = {};
            if (input) {
                var toSend = createPairing(el, e.target.id);
                success = "";
                
                var tableRow = el.rows[e.target.id];
                if (isNaN(parseFloat(tableRow.cells[6].innerHTML))) {
                    alert("Input was either empty or not a number");
                    return;
                }
                if (tableRow.cells[4].innerHTML === "") {
                    $.ajax({
                        url: '/teacherCourse',
                        dataType: 'json',
                        type: 'post',
                        contentType: 'application/json',
                        data: JSON.stringify(toSend), 
                        success: function(data, textStatus, jQxhr) {
                            alert(data.message);
                            window.location.href=window.location.href;
                        },
                        error: function(jqXhr, textStatus, errorThrown){
                            alert("One or more modifications failed. Check the input and try again");
                            console.log(errorThrown);
                            console.log(toSend);
                        }
                    });
                }
                else {
                    $.ajax({
                        url: '/teacherCourse',
                        dataType: 'json',
                        type: 'put',
                        contentType: 'application/json',
                        data: JSON.stringify(toSend), 
                        success: function(data, textStatus, jQxhr) {
                            alert(data.message);
                            window.location.href=window.location.href;
                        },
                        error: function(jqXhr, textStatus, errorThrown){
                            alert("One or more modifications failed. Check the input and try again");
                            console.log(errorThrown);
                            console.log(toSend);
                        }
                    });
                }
            }
            e.preventDefault();
        }


        function removeTeacher( e ){
            console.log(e.target.id);
            const el = document.getElementById("table"),
                input = el.nodeName != 'INPUT' && el.nodeName != 'TEXTAREA',
                data = {};
            if (input) {
                var toSend = createPairing(el, e.target.id);
                toSend["teacherID"] = "";
                success = "";
                
                var tableRow = el.rows[e.target.id];
                if (tableRow.cells[4].innerHTML === "") {
                    alert("No teacher to remove.");
                }
                else {
                    $.ajax({
                        url: '/teacherCourse',
                        dataType: 'json',
                        type: 'put',
                        contentType: 'application/json',
                        data: JSON.stringify(toSend), 
                        success: function(data, textStatus, jQxhr) {
                            alert(data.message);
                            window.location.href=window.location.href;
                        },
                        error: function(jqXhr, textStatus, errorThrown){
                            alert("One or more modifications failed. Check the input and try again");
                            console.log(errorThrown);
                            console.log(toSend);
                        }
                    });
                }
            }
            e.preventDefault();
        }

        $('.submitrow').click(function(e) { submitChanges(e); });
        $('.deleterow').click(function(e) { removeTeacher(e); });
    })(jQuery);


    function createPairing(table, row) {
        var data = {};
        console.log(row);
        var tableRow = table.rows[row];
        data["courseID"] = tableRow.cells[0].innerHTML;
        data["teacherID"] = parseFloat(tableRow.cells[6].innerHTML);
        return data;
    }
</script>
</body>

<script>
    document.addEventListener('keydown', function (event) {
    var esc = event.which == 27,
        nl = event.which == 13,
        el = event.target,
        input = el.nodeName != 'INPUT' && el.nodeName != 'TEXTAREA',
        data = {};

    if (input) {
        if (esc) {
        // restore state
        
        document.execCommand('undo');
        el.blur();
        } else if (nl) {
        // save
        
        data[el.getAttribute('data-name')] = el.innerHTML;

        console.log(tableToJson(el));

        el.blur();
        event.preventDefault();
        }
    }
    }, true);

    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i=0; i<table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi,'');
        }

        // go through cells
        for (var i=1; i<table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j=0; j<tableRow.cells.length; j++) {

                rowData[ headers[j] ] = tableRow.cells[j].innerHTML;

            }

            data.push(rowData);
        }       

        return data;
    }
</script>


</html>