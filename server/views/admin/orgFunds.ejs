<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Adjust Budgets</title>
    <style type="text/css">
        section {
            border-bottom: 1px solid grey;
            padding-bottom: 10px;
        }

        section p:first-of-type>strong {
            color: rgb(2.8%, 11.1%, 47.6%);
        }

        section p:nth-of-type(2)>strong {
            color: rgb(29.1%, 30.8%, 38.2%);
        }
    </style>
</head>

<body>

<h3>Manage budgets:</h3>
<table id="orgDetails" border="1" style="margin-bottom:1cm" >
    <tr>
        <th style="background-color: darkgray;">Organization ID</th>
        <th style="background-color: darkgray;">Organization</th>
        <th style="background-color: darkgray;">Type</th>
        <th style="background-color: darkgray;">Department</th>
        <th style="background-color: darkgray;">Organization Budget</th>
        <th >Amount</th>
    </tr>
    
    <%
    if(results.length!=0){
    var i=1;
    results.forEach(function(data){
    %>
    <tr>
        <td style="background-color: darkgray;"><%=data.orgID %></td>
        <td style="background-color: darkgray;"><%=data.org %></td>
        <td style="background-color: darkgray;"><%=data.type %></td>
        <td style="background-color: darkgray;"><%=data.dept %></td>
        <td style="background-color: darkgray;"><%=data.orgBudget %></td>
        <td ></td>
    </tr>
    <%  i++; }) %>
    <% } else{ %>
        <tr>
            <th style="background-color: darkgray;">id</th>
            <th style="background-color: darkgray;">name</th>
            <th style="background-color: darkgray;">budget</th>
        </tr>

    <% } %>
</table>

<table id="deptDetails" border="1" style="margin-bottom:1cm" >
    <tr>
        <th style="background-color: darkgray;">Department</th>
        <th style="background-color: darkgray;">Department Budget</th>
    </tr>
    
    <%
    if(results.length!=0){
        const seen = []
        results.forEach(function(data){
            if (!seen.includes(data.dept)) {
    %>
    <tr>
        <td style="background-color: darkgray;"><%=data.dept %></td>
        <td style="background-color: darkgray;"><%=data.deptBudget %></td>
    </tr>
    <%      }
            seen.push(data.dept);
        }); 
    %>
    <% } else{ %>
        <tr>
            <td colspan="7">No Data Found</td>
        </tr>
    <% } %>
</table>

<button type="button" id="depositButton">Deposit</button>
<button type="button" id="withdrawButton">Withdraw</button>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script>
    $(function() {
        $("tr").each(function() {
            $(this).find("td:eq(5)").attr("contentEditable", true);
        });
    });
    var success = "";
    (function($){
        const makeChanges = async ( e ) => {
            const el = document.getElementById("orgDetails"),
                input = el.nodeName != 'INPUT' && el.nodeName != 'TEXTAREA',
                data = {};
            if (input) {
                const { orgs, changes } = grabTable(el, e.currentTarget.isDeposit);
                const promises = []
                for (var i = 0; i < orgs.length; i++) {
                    if (changes[i]) {
                        promises.push(new Promise((resolve, reject) => {
                            $.ajax({
                                url: '/organizations/budget',
                                dataType: 'json',
                                type: 'put',
                                contentType: 'application/json',
                                data: JSON.stringify({ id: orgs[i], amount: changes[i] }), 
                                success: function(data, textStatus, jQxhr) {
                                    resolve();
                                },
                                error: function(jqXhr, textStatus, errorThrown){
                                    console.log(errorThrown);
                                    console.log(orgs[i], changes[i]);
                                    reject();
                                }
                            });
                        }));
                    } 
                }
                await Promise.all(promises).then(() => {
                        alert("All modifications succeeded.");
                        window.location.href = window.location.href;
                    })
                    .catch(() => {
                        alert("One or more modifications failed. Please review budgets.");
                        window.location.href = window.location.href;
                    });
            }

            e.preventDefault();
        }

        depositButton.addEventListener("click", makeChanges, false);
        depositButton.isDeposit = true;
        withdrawButton.addEventListener("click", makeChanges, false);
        withdrawButton.isDeposit = false;
    })(jQuery);


    function grabTable(table, isDeposit) {
        const data = { orgs: [], changes: [] };

        // first row needs to be headers
        var headers = [];
        for (var i=0; i<table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML;
        }

        const idIdx = headers.indexOf('Organization ID');
        const amtIdx = headers.indexOf('Amount');
        // go through cells
        for (var i=1; i<table.rows.length; i++) {
            const tableRow = table.rows[i];
            data.orgs.push(tableRow.cells[idIdx].innerHTML);
            if (isDeposit) {
                data.changes.push(parseFloat(tableRow.cells[amtIdx].innerHTML));
            } else {
                data.changes.push(-1 * parseFloat(tableRow.cells[amtIdx].innerHTML));
            }
        }       
        console.log(JSON.stringify(data));
        return data;
    }
</script>

</body>

</html>
